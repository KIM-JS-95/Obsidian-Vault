# 클라우드 보안 위협에 대바하는 방법

## 🚀 Company - AnnLab Cloud
### 🚀 Type - White Paper

---


## 서론

클라우드 기술이 빠르게 발전과 동시에 기업에서는 클라우드 환경의 보안을 구축할 방법을 모색하고 있다.

거대한 클라우드 환경에서 개발자들은 어떤 요소를 우선적으로 고려해야 할까?

이번 Ahnlab 문서에서는 그 시작을 서버 워크로드를 보호하는 솔루션 `CWPP(Cloud Workload Protection Platform)`
이라고 말한다.

## 본론

### 보안 실패의 책임

AhnLab 문서 `안전한 클라우드 환경 조성 방안`에는 보안을 강화하는 요소중 하나로 권한의 중요성에 대해 거론한 적이 있다.
그러나 그 `권한`또한 클라우드 내부에 이미 배치되어 운영중인 서비스 내부에서의 안전성을 높이기 위한 방안이다.
반면, 전체적인 클라우드 환경에서 보안적 문제가 발생할 경우 누구의 책임일까?

`공동 책임 모델(Shared Responsibility)`를 근거로 사고 혹은 장애가 발생한다면 그 원인을 분석하여 누구의 책임인지 확인해야한다.
다시말해, 반드시 Cloud 제공자의 책임 혹은 사용자의 책임으로 몰아갈 수는 없다는 것이다.

그렇다면 그 기준은 무엇일까?

먼저 `AWS Cloud`의 공동책임을 살펴본다면 하드웨어, 네트워크, 시스템 등은 AWS의 책임이지만 고객의 보안문제에 관해서는 고객의 책임으로 보고있다.

![](https://d1.awsstatic.com/security-center/Shared_Responsibility_Model_V2.59d1eccec334b366627e9295b304202faf7b899b.jpg)


다른 예시로 `Azure`에서는 laas, Paas, SaaS 로 구분하여 책임범위를 구분하고있다.
![](https://blog.sckcloud.co.kr/hs-fs/hubfs/AhnLab/FY20/Q3/shared-responsibility.png?width=1479&name=shared-responsibility.png)

정리하면 서비스의 책임은 Cloud 서비스 제공 기업마다 그리고 장애가 발생한 원인에 따라 그 기준이 달라질 수 있다는 점이다.

### 클라우드 보안, 그 방법은?

안전한 클라우드 환경 조성은 어떻게 시작할까?

- 온프레미스 서버와 클라우드 서버를 한꺼번에 관리할 수 있어야한다.
- 조직 내에서 직접 관리하지 않는 클라우드 서버에 대해 물리적인 접근 제어나 네트워크 접근 제어가 어렵기 때문에 논리적인 접근이 용이해야한다.
- 서버로 표적화된 공격이 존재하므오 악성코드 등 보안 위협으로부터 서버를 보오할 수 있어야한다.

### 클라우드 워크로드 보안 플랫폼 AhnLab CPP

`AhnLab CPP`는 클라우드 서버 워크로드 보호에 필요한 보안 기능과 보안 제품을 하나의 콘솔에서 통합하여 관리한다.

화이트리스트 기반의 애플리케이션 실행/접근 제어, 무결성 모니터링을 담당하는 
App control, 침입탐지/방지시스템 그리고 방화벽 기능을 담당하는 `호스트 IPS` 등을 하나의 콘솔에서 관리하는 것이다.

또한 기업 전체 서버 보안 상태를 확인 할 수 있는 대시보드를 통해 서버 워크로드에 대한 통합된 가시성을 제공한다.

### 주요 기능은?

![](https://byline.network/wp-content/uploads/2020/11/Ahalab-CPP_1-1.jpg)

1. 애플리케이션 컨트롤 & 무결성 모니터링

가장 기초적인 1차 필터링과도 같다.

기존 등록된 즉, 인가된 애플리케이션만을 실행 허용하고 그 외는 실행차단하여 원래의 용도로만 서버가 운영되도록 하고, 사전 방역 효과를 제공한다.

또한, 무결성 모니터링 기능은 일반적으로 변경이 없어야 하는 특정 파일/폴더, 레지스트리, 시작 프로그램, 서빅스 등에서 병경이 있는지 감시한다.

2. 호스트 IPS & 방화벽

개인 PC 정보를 추적하여 차단하는 기능 또한 제공한다.
트래픽을 모니터링하여 방화벽 설적에 따라 허용 / 차단하거나, 적용된 IPS 시그니처에 따라 공격을 탐지/차단한다.

네트워크 IPS와 달리 호스트 IPS는 적용 대상이 서비스 서버로, 필요한 시그니처만을 적용하여 서버의 부하를 중이고 보안의 효울성을 높일 수 있다.

3. 악성코드 대응

4. 컨테이너 보안
도커, k8s 환경에서 컨테이너 파일에 대한 학성코드 탐지 및 대응 역량을 제공한다.
특히 탐지된 컨테이너 파일과 네트워크 공격 및 통신이 어느 컨테이너에서 발생했는지 식별할 수 있다.

이를 통해 관리자는 보안상 취약점을 가진 컨테이너를 손쉽게 파악해 보다 안전한 서비스 운영 환경을 조성할 수 있다.

## 정리

클라우드의 도입은 서비스 제공 형태 및 위치가 다양해지고 복잡해지면서, 워크로드에 대한 관리 부담이 증가하고있다.

여기서 안랩은 `AhnLab CPP` 서비스를 제공하는 것으로  온프레미스와 클라우드 상의 윈도우 / 리눅스 서버를 보호하기 위한 플랫폼으로, 
조직 내 서버에 대한 통합된 가시성과 함께 APP 컨트롤, 호스트 IPS 및 방화벽, 안티 멀웨어 기능 들을 제공하며 컨테이너 보안도 함께 지원한다.



